blueprint:
  name: 电视
  description: 电视开关事件
  domain: automation
  source_url: https://github.com/shaonianzhentan/xiaomi_tv999
  input:
    media_entity:
      name: 电视
      description: 电视
      default: []
      selector:
        entity:
          integration: Android Debug Bridge
          domain: media_player
    tv_on:
      name: 打开电视
      description: 需要依赖小爱音箱或红外遥控进行开机控制
      default: []
      selector:
        action: {}
    tv_off:
      name: 关闭电视
      description: 如果是小米盒子，可以在关闭设备后，调用服务控制普通电视的关闭
      default: []
      selector:
        action: {}
    mode_hdmi1:
      name: HDMI1
      description: 信号源 hdmi1
      default: []
      selector:
        action: {}
    mode_hdmi2:
      name: HDMI2
      description: 信号源 hdmi2
      default: []
      selector:
        action: {}
    mode_hdmi3:
      name: HDMI3
      description: 信号源 hdmi3
      default: []
      selector:
        action: {}
    mode_tv:
      name: TV
      description: 信号源 tv
      default: []
      selector:
        action: {}
    mode_vga:
      name: VGA
      description: 信号源 vga
      default: []
      selector:
        action: {}
    mode_av:
      name: AV
      description: 信号源 av
      default: []
      selector:
        action: {}
trigger:
- platform: event
  event_type: xiaomi_tv
  event_data:
    entity_id: !input media_entity
action:
- variables:
    type: '{{ trigger.event.data.type }}'
- choose:
  - conditions:
    - '{{ type == "on" }}'
    sequence: !input 'tv_on'
  - conditions:
    - '{{ type == "off" }}'
    sequence: !input 'tv_off'
  - conditions:
    - '{{ type == "hdmi1" }}'
    sequence: !input 'mode_hdmi1'
  - conditions:
    - '{{ type == "hdmi2" }}'
    sequence: !input 'mode_hdmi2'
  - conditions:
    - '{{ type == "hdmi3" }}'
    sequence: !input 'mode_hdmi3'
  - conditions:
    - '{{ type == "tv" }}'
    sequence: !input 'mode_tv'
  - conditions:
    - '{{ type == "vga" }}'
    sequence: !input 'mode_vga'
  - conditions:
    - '{{ type == "av" }}'
    sequence: !input 'mode_av'
